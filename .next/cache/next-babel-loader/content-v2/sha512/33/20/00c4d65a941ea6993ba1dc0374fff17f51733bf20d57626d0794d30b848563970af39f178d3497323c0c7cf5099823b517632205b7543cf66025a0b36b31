{"ast":null,"code":"import * as M from \"@effect-ts/morphic\";\nimport * as D from \"@effect-ts/morphic/Decoder\";\nconst RainfallAmount_ = M.make(_c = F => F.interface({\n  request: F.string(),\n  days: F.array(F.interface({\n    day: F.number(),\n    amount: F.number()\n  }))\n}));\n_c2 = RainfallAmount_;\nexport const RainfallAmount = M.opaque()(RainfallAmount_);\nexport const decodeRainfallAmount = D.decoder(RainfallAmount).decode;\nexport const decodeRainfallAmountArray = D.decoder(M.make(F => F.array(RainfallAmount(F)))).decode;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RainfallAmount_$M.make\");\n$RefreshReg$(_c2, \"RainfallAmount_\");","map":{"version":3,"sources":["/Users/guevaser/Documents/challenge/adi-challenge/src/model.ts"],"names":["M","D","RainfallAmount_","make","F","interface","request","string","days","array","day","number","amount","RainfallAmount","opaque","decodeRainfallAmount","decoder","decode","decodeRainfallAmountArray"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,oBAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,4BAAnB;AAEA,MAAMC,eAAe,GAAGF,CAAC,CAACG,IAAF,MAAQC,CAAD,IAC7BA,CAAC,CAACC,SAAF,CAAY;AACVC,EAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,EADC;AAEVC,EAAAA,IAAI,EAAEJ,CAAC,CAACK,KAAF,CAAQL,CAAC,CAACC,SAAF,CAAY;AAAEK,IAAAA,GAAG,EAAEN,CAAC,CAACO,MAAF,EAAP;AAAmBC,IAAAA,MAAM,EAAER,CAAC,CAACO,MAAF;AAA3B,GAAZ,CAAR;AAFI,CAAZ,CADsB,CAAxB;MAAMT,e;AAUN,OAAO,MAAMW,cAAc,GAAGb,CAAC,CAACc,MAAF,GAC5BZ,eAD4B,CAAvB;AAIP,OAAO,MAAMa,oBAAoB,GAAGd,CAAC,CAACe,OAAF,CAAUH,cAAV,EAA0BI,MAAvD;AACP,OAAO,MAAMC,yBAAyB,GAAGjB,CAAC,CAACe,OAAF,CACvChB,CAAC,CAACG,IAAF,CAAQC,CAAD,IAAOA,CAAC,CAACK,KAAF,CAAQI,cAAc,CAACT,CAAD,CAAtB,CAAd,CADuC,EAEvCa,MAFK","sourcesContent":["import * as M from \"@effect-ts/morphic\"\nimport * as D from \"@effect-ts/morphic/Decoder\"\n\nconst RainfallAmount_ = M.make((F) =>\n  F.interface({\n    request: F.string(),\n    days: F.array(F.interface({ day: F.number(), amount: F.number() }))\n  })\n)\n\nexport interface RainfallAmount extends M.AType<typeof RainfallAmount_> {}\nexport interface RainfallAmountRaw extends M.EType<typeof RainfallAmount_> {}\n\nexport const RainfallAmount = M.opaque<RainfallAmountRaw, RainfallAmount>()(\n  RainfallAmount_\n)\n\nexport const decodeRainfallAmount = D.decoder(RainfallAmount).decode\nexport const decodeRainfallAmountArray = D.decoder(\n  M.make((F) => F.array(RainfallAmount(F)))\n).decode\n"]},"metadata":{},"sourceType":"module"}