{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/guevaser/Documents/challenge/adi-challenge/src/components/Pressure-slider/pressure-slider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nconst sliderThumbStyles = `\n  width: 25px;\n  height: 25px;\n  background: #efefef;\n  cursor: pointer;\n  outline: 5px solid #333;\n  opacity: 1;\n  -webkit-transition: .2s;\n  transition: opacity .2s;\n`;\nconst Styles = styled.div`\n  display: flex;\n  align-items: center;\n  color: #888;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  .value {\n    flex: 1;\n    font-size: 2rem;\n  }\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 100%;\n    height: 15px;\n    border-radius: 5px;\n    background: #efefef;\n    outline: none;\n  }\n`;\n_c = Styles;\n\nconst PressureSlider = () => {\n  _s();\n\n  const {\n    0: value,\n    1: setValue\n  } = useState((970 + 1030) / 2);\n\n  const handleOnChange = e => setValue(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    color: \"#0074D9\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: 970,\n      max: 1030,\n      value: value,\n      className: \"slider\",\n      onChange: handleOnChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"value\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PressureSlider, \"eZxkdvzdx9Px0RfkvcYTEi4ZL/M=\");\n\n_c2 = PressureSlider;\nexport default PressureSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"PressureSlider\");","map":{"version":3,"sources":["/Users/guevaser/Documents/challenge/adi-challenge/src/components/Pressure-slider/pressure-slider.tsx"],"names":["React","useState","styled","sliderThumbStyles","Styles","div","PressureSlider","value","setValue","handleOnChange","e","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,iBAAiB,GAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;KAAMD,M;;AAqBN,MAAME,cAAwB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,CAAC,MAAM,IAAP,IAAe,CAAhB,CAAlC;;AACA,QAAMQ,cAAc,GAAIC,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAAUJ,KAAX,CAAtC;;AACA,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,SAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,GAAG,EAAE,GAFP;AAGE,MAAA,GAAG,EAAE,IAHP;AAIE,MAAA,KAAK,EAAEA,KAJT;AAKE,MAAA,SAAS,EAAC,QALZ;AAME,MAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBF;AAAxB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBD;;GAAMD,c;;MAAAA,c;AAkBN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst sliderThumbStyles =  `\n  width: 25px;\n  height: 25px;\n  background: #efefef;\n  cursor: pointer;\n  outline: 5px solid #333;\n  opacity: 1;\n  -webkit-transition: .2s;\n  transition: opacity .2s;\n`;\n\nconst Styles = styled.div`\n  display: flex;\n  align-items: center;\n  color: #888;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  .value {\n    flex: 1;\n    font-size: 2rem;\n  }\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 100%;\n    height: 15px;\n    border-radius: 5px;\n    background: #efefef;\n    outline: none;\n  }\n`;\n\nconst PressureSlider: React.FC = () => {\n  const [value, setValue] = useState((970 + 1030) / 2);\n  const handleOnChange = (e) => setValue(e.target!.value);\n  return (\n    <Styles color={\"#0074D9\"}>\n      <input\n        type=\"range\"\n        min={970}\n        max={1030}\n        value={value}\n        className=\"slider\"\n        onChange={handleOnChange}\n      />\n      <div className=\"value\">{value}</div>\n    </Styles>\n  );\n};\n\nexport default PressureSlider;\n"]},"metadata":{},"sourceType":"module"}